defaultTasks 'clean','clearReports', 'test'

repositories {
    mavenCentral()
    maven {
        url "https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/"
    }
}


buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.serenity-bdd:serenity-gradle-plugin:3.2.5"
        classpath "net.serenity-bdd:serenity-single-page-report:3.2.5"
    }
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "net.serenity-bdd.serenity-gradle-plugin"

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    slf4jVersion = '1.7.7'
    serenityCoreVersion = '3.2.5'
    serenityCucumberVersion = '3.2.5'
    junitVersion = '4.13.1'
    assertJVersion = '3.8.0'
    logbackVersion = '1.2.10'
}
if (project.hasProperty("browserstack")) {
    def enviro= project.property("browserstack")
    System.setProperty("browserstack" , "$enviro")
}



dependencies {
    implementation "ch.qos.logback:logback-classic:${logbackVersion}"


    testImplementation "net.serenity-bdd:serenity-core:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-cucumber:${serenityCucumberVersion}",
            "net.serenity-bdd:serenity-screenplay:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-screenplay-webdriver:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-ensure:${serenityCoreVersion}",
            "junit:junit:${junitVersion}",
            "org.junit.platform:junit-platform-launcher:1.8.2",
            "org.junit.jupiter:junit-jupiter-engine:5.8.2",
            "org.junit.vintage:junit-vintage-engine:5.8.2",
            "org.assertj:assertj-core:${assertJVersion}",
            "net.serenity-bdd:serenity-browserstack:3.2.2"

}

def cucumberOptions = ['-g', 'stepDefinition']

def cucumberTagExpression = ['-t', '@aisHomepage']

def availableThreadCount = Runtime.runtime.availableProcessors().intdiv(2) ?: 1

def cucumberThreadsOption = ['--threads', availableThreadCount.toString()]

def setParallel = "false"

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumber() {
    dependsOn assemble ,compileTestJava
    def cucumberArguments = ['-g', 'stepDefinition','src/test/resources/features']

    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            systemProperties System.getProperties()
//            cucumberArguments << '-t' << (systemProperties.tags != null ? systemProperties.tags : '@aisHomepage')
//            cucumberArguments << (systemProperties.location != null ? systemProperties.location : 'src/test/resources/features')
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            systemProperty "cucumber.options", System.properties.getProperty("cucumber.options")
            systemProperty "parallel", System.properties.getProperty("parallel", setParallel)
            cucumberArguments.addAll(cucumberTagExpression)
            if (setParallel == "true") cucumberArguments.addAll(cucumberThreadsOption)
            args = cucumberArguments
        }
    }
}
//
//task runInParallel() {
//    group = 'Cucumber Parallel'
//    description = 'Runs build in parallel if used'
//    doLast {
//        setParallel = "true"
//    }
//}


test {
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
}


serenity {
    // Specify the root package of any JUnit acceptance tests to appear in the Serenity report
    testRoot = "starter"
    reports = ["single-page-html"]
    // Specify the root directory of any Cucumber feature files
    requirementsDir = "src/test/resources/features"

}

gradle.startParameter.continueOnFailure = true

test.finalizedBy(aggregate)